Project Duration Estimation Application
========================================================
author: Castor
date: 26/9/2015

Introduction
========================================================

When implementing a project you always need to know where your project stands. 
Is it on schedule? On budget?

The application does exactly that. It uses a sample project and the users input to calculate basic project indexes that show how well the project is implemented and gives a prediction on when the project will be completed. 

My intention is to extent the app so that the user can enter his project. 

The link to the application is: https://castor.shinyapps.io/Dev_Data_Prod_Course_prj

Input
========================================================

The application uses the planned value, the actual value and the earned value of the project. This data can easily be extracted from any project scheduling software. (Here I use a sample project)

The user just inputs the current project's day, through the slider and chooses the method to be used for the estimation. 

![width](image.png)

Output
========================================================

<small> The application calculates the basic indexes that show how the project is implemented: 
- SPI(t) is an index that shows the current schedule performance. 
    - SPI(t) > 1 means that the project is ahead of schedule, 
    - SPI(t) < 1 means that the project is behind schedule and 
    - SPI(t) = 1 means that the project is on schedule
- CPI is an index that shows the current cost performance. 
    - CPI > 1 means that the project is under budget, 
    - CPI < 1 means that the project is over budget and 
    - CPI = 1 means that the project is on budget
- CSI(t) is a composite index for schedule and cost performance. It is the product of SPI(t) and CPI.
- EAC(t) Is the Estimation At Completion Time, i.e. the estimated duration of the project. </small>

Example
=====================================================

When the project is in its 6th day and the estimation method is PF = CSI(t). ie:
```{r,echo=FALSE}
library(xlsx)

data <- read.xlsx2("D:/My documents/datascience/Dev_Data_Prod_Course_prj/dev.data.prod.course.proj.slidify/EV_input.xlsx",1, header = TRUE, colClasses= c("numeric","numeric","numeric","numeric"))
data$SV <- data$EV - data$PV
data$SV <- data$EV - data$AC
data$SV <- data$EV - data$PV
data$CV <- data$EV - data$AC
data$SPI <- data$EV / data$PV
data$CPI <- data$EV / data$AC
data$SCI <- data$SPI * data$CPI

ESm <- data[,1]

for(i in 1:nrow(data)) {
        ESm <- cbind(ESm, data$EV[i] - data$PV)
}

PVmax <- max(data$PV)
PD <- sum(data$PV < PVmax)+1
```
```{r}
AD <- 6
```

```{r,echo=FALSE}
ESc <- ESm[ ,AD+1]
EScpos <-  ESc[ESc>0]
C <- as.numeric(length(EScpos))

ESt <- C + (data$EV[AD] - data$PV[C])/(data$PV[C+1] - data$PV[C])
SPIt <- ESt/AD
SCIt <- SPIt*data$CPI[AD]
```
```{r}
PF <- SPIt
```

```{r, echo=FALSE}
EAC <- AD + (PD - ESt)/PF
```

Then: 
- SPI(t) equals `r round(SPIt,3)`
- CPI equals `r round(data$CPI[AD],3)`
- CSI(t) equals `r round(SCIt,3)`

And Estimation At Completion (EAC) equals `r round(EAC,3)` 

