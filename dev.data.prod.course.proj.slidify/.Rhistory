install.packages("shiny")
shiny::runApp('OneDrive/Documents/07. Personal Mastery/Coursera/Current courses/Developing Data Products/Week 01/Examples/example3')
require(rCharts)
install.packages("rCharts")
install.packages("rCharts")
require(devtools)
install.packages("devtools")
install_github('rCharts', 'ramnathv')
install_github??
)()
install_github
install_github()
library(devtools)
install_github('rCharts', 'ramnathv')
library(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nplot
n1 <- nplot(Freq ~ Hair, group = Eye, type = multiBarChart)
n1 <- nplot(Freq ~ Hair, group = "Eye", type = "multiBarChart", data = subset(haireye, Sex = Male) )
n1 <- nPlot(Freq ~ Hair, group = "Eye", type = "multiBarChart", data = subset(haireye, Sex = Male) )
n1$save(fig/n1.html, cdn = TRUE)
n1$save("fig/n1.html", cdn = TRUE)
n1$save("n1.html", cdn = TRUE)
cat("<iframe scr="n1.html" width=100%, height=600></iframe")
nPlot(Freq ~ Hair, group = "Eye", type = "multiBarChart", data = subset(haireye, Sex = Male) )
cat("<iframe scr="n1.html" width=100%, height=600></iframe")
cat("<iframe src="n1.html" width=100%, height=600></iframe")
cat("<iframe src="n1.html", width=100%, height=600></iframe")
cat("<iframe src='n1.html', width=100%, height=600></iframe")
library(manipulate)
install.packages("manipulate")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
library(rCharts)
library(airquality)
data("airquality")
dTable(airquality, sPaginationType = "full_numbers")
shiny::runApp('Datascience/DevDataProd/quiz 1')
install.packages("usingR")
shiny::runApp('Datascience/DevDataProd/quiz 1')
shiny::runApp('Datascience/DevDataProd/quiz 1')
shiny::runApp('Datascience/DevDataProd/Course Project')
library(xlsx)
library(xlsx)
shiny::runApp('datascience/DevDataProd/Course Project')
shiny::runApp('datascience/DevDataProd/Course Project')
shiny::runApp('datascience/DevDataProd/Course Project')
shiny::runApp('datascience/DevDataProd/Course Project')
shiny::runApp('datascience/DevDataProd/Course Project')
shiny::runApp('datascience/DevDataProd/Course Project')
shiny::runApp('datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
library(devtools)
library(Rtools)
install.packages("Rtools")
devtools:: install_github("rstudio/shinyapps")
shinyapps::setAccountInfo(name='castor', token='05DFCC1E7B265619DD0C813502CA878C', secret='Od4zcwRn7ZI+PKsdk7Qfob5Wgh/QwAdw8BvNJ6YT')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project')
shiny::runApp('Datascience/DevDataProd/Course Project/Dev_Data_Prod_Course_prj')
shiny::runApp('Datascience/DevDataProd/Course Project/Dev_Data_Prod_Course_prj')
shiny::runApp('Datascience/DevDataProd/Course Project/Dev_Data_Prod_Course_prj')
shiny::runApp('Datascience/DevDataProd/Course Project/Dev_Data_Prod_Course_prj')
library(shinyapps)
shinyapps::deployApp('D:/documents/datascience/devdataprod/course project/Dev_data_prod_course_prj')
library(shinyapps)
shinyapps::deployApp('D:/Documents/Datascience/DevDataProd/Course Project/Dev_Data_Prod_Course_prj')
library(shinyapps)
shinyapps::deployApp('D:/Documents/Datascience/DevDataProd/Course_Project/Dev_Data_Prod_Course_prj')
library(shinyapps)
shinyapps::deployApp("D:/Documents/Datascience/DevDataProd/Course_Project/Dev_Data_Prod_Course_prj")
library(shinyapps)
shinyapps::deployApp("Datascience/DevDataProd/Course Project/Dev_Data_Prod_Course_prj")
library(shinyapps)
shinyapps::deployApp("Datascience/DevDataProd/Course Project/Dev_Data_Prod_Course_prj")
shinyapps::deployApp("D:/My Documents/Datascience/DevDataProd/Course Project/Dev_Data_Prod_Course_prj")
shinyapps::deployApp("D:/Documents/Datascience/DevDataProd/Course Project/")
shinyapps::deployApp("D:/Documents/Datascience/DevDataProd/Course Project")
shinyapps::deployApp("Datascience/DevDataProd/Course Project")
shinyapps::deployApp("./Datascience/DevDataProd/Course Project")
shinyapps::deployApp("./Datascience/DevDataProd")
install.packages("rmarkdown")
shinyapps::deployApp("./Datascience/DevDataProd")
shinyapps::deployApp("./Datascience/DevDataProd")
shinyapps::deployApp("./Datascience/DevDataProd")
shinyapps::deployApp("./Datascience/DevDataProd")
shinyapps::deployApp("./Datascience/Dev_Data_Prod_Course_prj")
shiny::runApp('Datascience/Dev_Data_Prod_Course_prj')
shiny::runApp('Datascience/Dev_Data_Prod_Course_prj')
shinyapps::deployApp("./Datascience/Dev_Data_Prod_Course_prj")
LIBRARY(slidify)
library(slidify)
getwd()
setwd("./datascience/dev_data_prod_course_prj")
author(dev.data.prod.course.proj.slidify)
author("dev.data.prod.course.proj.slidify")
library(knitr)
browseURL(index.Rmd)
browseURL("index.Rmd")
browseURL("index.html")
slidify("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
shiny::runApp('~/datascience/dev_data_prod_course_prj')
library(knitr)
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
library(xlsx)
data <- read.xlsx2("EV_input.xlsx",1, header = TRUE, colClasses= c("numeric","numeric","numeric","numeric"))
ESm <- data[,1]
for(i in 1:nrow(data)) {
ESm <- cbind(ESm, data$EV[i] - data$PV)
}
PVmax <- max(data$PV)
PD <- sum(data$PV < PVmax)+1
t <- 5
ESc <- ESm[ ,t+1]
EScpos <-  ESc[ESc>0]
C <- as.numeric(length(EScpos))
ESt <- C + (data$EV[t] - data$PV[C])/(data$PV[C+1] - data$PV[C])
SPIt <- ESt/t
SCIt <- SPIt*data$CPI[t]
PF1 <- 1
PF2 <- SPIt
PF3 <- SCIt
EAC1 <- t + (PD - ESt)/PF1
EAC2 <- t + (PD - ESt)/PF2
EAC3 <- t + (PD - ESt)/PF3
data <- read.xlsx2("EV_input.xlsx",1, header = TRUE, colClasses= c("numeric","numeric","numeric","numeric"))
setwd("./ev")
getwd()
slidify("index.Rmd")
getwd()
slidify("index.Rmd")
library(xlsx)
data <- read.xlsx2("EV_input.xlsx",1, header = TRUE, colClasses= c("numeric","numeric","numeric","numeric"))
ESm <- data[,1]
for(i in 1:nrow(data)) {
ESm <- cbind(ESm, data$EV[i] - data$PV)
}
PVmax <- max(data$PV)
PD <- sum(data$PV < PVmax)+1
t <- 5
ESc <- ESm[ ,t+1]
EScpos <-  ESc[ESc>0]
C <- as.numeric(length(EScpos))
ESt <- C + (data$EV[t] - data$PV[C])/(data$PV[C+1] - data$PV[C])
SPIt <- ESt/t
SCIt <- SPIt*data$CPI[t]
PF <- SPIt
EAC <- t + (PD - ESt)/PF
EAC
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
data <- read.xlsx2("EV_input.xlsx",1, header = TRUE, colClasses= c("numeric","numeric","numeric","numeric"))
ESm <- data[,1]
for(i in 1:nrow(data)) {
ESm <- cbind(ESm, data$EV[i] - data$PV)
}
PVmax <- max(data$PV)
PD <- sum(data$PV < PVmax)+1
t <- 5
ESc <- ESm[ ,t+1]
EScpos <-  ESc[ESc>0]
C <- as.numeric(length(EScpos))
ESt <- C + (data$EV[t] - data$PV[C])/(data$PV[C+1] - data$PV[C])
SPIt <- ESt/t
SCIt <- SPIt*data$CPI[t]
PF <- SPIt
EAC <- t + (PD - ESt)/PF
EAC
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
